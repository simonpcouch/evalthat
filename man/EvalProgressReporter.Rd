% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reporter-progress.R
\name{EvalProgressReporter}
\alias{EvalProgressReporter}
\title{Test reporter: interactive progress bar of errors.}
\description{
\code{EvalProgressReporter} is designed for interactive use. Its goal is to
give you actionable insights to help you understand the status of your
code. This reporter also praises you from time-to-time if all your tests
pass. It's the default reporter for \code{\link[=test_dir]{test_dir()}}.

\code{EvalParallelProgressReporter} is very similar to \code{EvalProgressReporter}, but
works better for packages that want parallel tests.

\code{EvalCompactProgressReporter} is a minimal version of \code{EvalProgressReporter}
designed for use with single files. It's the default reporter for
\code{\link[=test_file]{test_file()}}.
}
\concept{reporters}
\section{Super classes}{
\code{\link[testthat:Reporter]{testthat::Reporter}} -> \code{\link[testthat:ProgressReporter]{testthat::ProgressReporter}} -> \code{EvalProgressReporter}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-EvalProgressReporter-start_file}{\code{EvalProgressReporter$start_file()}}
\item \href{#method-EvalProgressReporter-update_counts}{\code{EvalProgressReporter$update_counts()}}
\item \href{#method-EvalProgressReporter-start_context}{\code{EvalProgressReporter$start_context()}}
\item \href{#method-EvalProgressReporter-show_header}{\code{EvalProgressReporter$show_header()}}
\item \href{#method-EvalProgressReporter-show_status}{\code{EvalProgressReporter$show_status()}}
\item \href{#method-EvalProgressReporter-end_context}{\code{EvalProgressReporter$end_context()}}
\item \href{#method-EvalProgressReporter-add_result}{\code{EvalProgressReporter$add_result()}}
\item \href{#method-EvalProgressReporter-end_reporter}{\code{EvalProgressReporter$end_reporter()}}
\item \href{#method-EvalProgressReporter-update_io}{\code{EvalProgressReporter$update_io()}}
\item \href{#method-EvalProgressReporter-report_issues}{\code{EvalProgressReporter$report_issues()}}
\item \href{#method-EvalProgressReporter-clone}{\code{EvalProgressReporter$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="testthat" data-topic="Reporter" data-id=".start_context"><a href='../../testthat/html/Reporter.html#method-Reporter-.start_context'><code>testthat::Reporter$.start_context()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="Reporter" data-id="cat_line"><a href='../../testthat/html/Reporter.html#method-Reporter-cat_line'><code>testthat::Reporter$cat_line()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="Reporter" data-id="cat_tight"><a href='../../testthat/html/Reporter.html#method-Reporter-cat_tight'><code>testthat::Reporter$cat_tight()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="Reporter" data-id="end_context_if_started"><a href='../../testthat/html/Reporter.html#method-Reporter-end_context_if_started'><code>testthat::Reporter$end_context_if_started()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="Reporter" data-id="end_file"><a href='../../testthat/html/Reporter.html#method-Reporter-end_file'><code>testthat::Reporter$end_file()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="Reporter" data-id="end_test"><a href='../../testthat/html/Reporter.html#method-Reporter-end_test'><code>testthat::Reporter$end_test()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="Reporter" data-id="local_user_output"><a href='../../testthat/html/Reporter.html#method-Reporter-local_user_output'><code>testthat::Reporter$local_user_output()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="Reporter" data-id="rule"><a href='../../testthat/html/Reporter.html#method-Reporter-rule'><code>testthat::Reporter$rule()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="Reporter" data-id="start_test"><a href='../../testthat/html/Reporter.html#method-Reporter-start_test'><code>testthat::Reporter$start_test()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="Reporter" data-id="update"><a href='../../testthat/html/Reporter.html#method-Reporter-update'><code>testthat::Reporter$update()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="ProgressReporter" data-id="cr"><a href='../../testthat/html/ProgressReporter.html#method-ProgressReporter-cr'><code>testthat::ProgressReporter$cr()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="ProgressReporter" data-id="initialize"><a href='../../testthat/html/ProgressReporter.html#method-ProgressReporter-initialize'><code>testthat::ProgressReporter$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="ProgressReporter" data-id="is_full"><a href='../../testthat/html/ProgressReporter.html#method-ProgressReporter-is_full'><code>testthat::ProgressReporter$is_full()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="ProgressReporter" data-id="should_update"><a href='../../testthat/html/ProgressReporter.html#method-ProgressReporter-should_update'><code>testthat::ProgressReporter$should_update()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="ProgressReporter" data-id="start_reporter"><a href='../../testthat/html/ProgressReporter.html#method-ProgressReporter-start_reporter'><code>testthat::ProgressReporter$start_reporter()</code></a></span></li>
<li><span class="pkg-link" data-pkg="testthat" data-topic="ProgressReporter" data-id="status_data"><a href='../../testthat/html/ProgressReporter.html#method-ProgressReporter-status_data'><code>testthat::ProgressReporter$status_data()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-start_file"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-start_file}{}}}
\subsection{Method \code{start_file()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$start_file(file)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-update_counts"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-update_counts}{}}}
\subsection{Method \code{update_counts()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$update_counts()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-start_context"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-start_context}{}}}
\subsection{Method \code{start_context()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$start_context(context)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-show_header"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-show_header}{}}}
\subsection{Method \code{show_header()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$show_header()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-show_status"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-show_status}{}}}
\subsection{Method \code{show_status()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$show_status(complete = FALSE, time = 0, pad = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-end_context"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-end_context}{}}}
\subsection{Method \code{end_context()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$end_context(context)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-add_result"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-add_result}{}}}
\subsection{Method \code{add_result()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$add_result(context, test, result)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-end_reporter"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-end_reporter}{}}}
\subsection{Method \code{end_reporter()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$end_reporter()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-update_io"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-update_io}{}}}
\subsection{Method \code{update_io()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$update_io(x, test, type)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-report_issues"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-report_issues}{}}}
\subsection{Method \code{report_issues()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$report_issues(issues)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvalProgressReporter-clone"></a>}}
\if{latex}{\out{\hypertarget{method-EvalProgressReporter-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvalProgressReporter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
